Справка по программе CryptoBox:

Модуль "Генератор паролей":

Пароль Пользователя должен отвечать следующим требованиям:
    Длина пароля должна быть не менее 8 и не более 14 символов.
    Пароль должен состоять из букв латинского алфавита (A-z), арабских цифр (0-9) и специальных символов, приведенных в п. 4 данных требований.
    Буквенная часть пароля должна содержать как строчные, так и прописные (заглавные) буквы.
    Пароль должен содержать не менее одного из следующих символов:
    ( . , : ; ? ! * + % - < > @ [ ] { } / \ _ {} $ # ).


Модуль "Симметричное шифрование":
Алгоритм шифрования Advanced Encryption Standard (AES), также известный как Rijndael  — симметричный алгоритм блочного шифрования (размер блока 128 бит, ключ 128/192/256 бит), принятый в качестве стандарта шифрования правительством США по результатам конкурса AES.
Этот алгоритм хорошо проанализирован и сейчас широко используется, как это было с его предшественником DES. Национальный институт стандартов и технологий США (англ. National Institute of Standards and Technology, NIST) опубликовал спецификацию AES 26 ноября 2001 года после пятилетнего периода, в ходе которого были созданы и оценены 15 кандидатур. 26 мая 2002 года AES был объявлен стандартом шифрования. По состоянию на 2009 год AES является одним из самых распространённых алгоритмов симметричного шифрования.

Вектор инициализации - случайная последовательность, которая регулярно обновляется, передается по каналу управления и используется для инициализации алгоритма шифрования.
Вектор иннициализации не является секретным элементом и его можно передать в открытом виде по незащищенному каналу связи.

Рассмотрим процедуру зашифрования информации:
    1. Выберите файл, который нужно зашифровать нажав кнопку "Выбрать файл";
    2. Задайте вектор инициализации (поле можно оставить пустым);
    3. Нажмите кнопку "Зашифровать";
    4. Выберие путь сохранения зашифрованного файла и введите его название;
    5. Придумайте пароль.

Рассмотрим процедуру зашифрования информации:
    1. Выберите файл, который нужно расшифровать;
    2. Задайте вектор инициализации, который был указан при шифровании файла (оставьте поле пустым, если вектор инициализации отсутствует);
    3. Нажмите кнопку "Расшифровать";
    4. Выберие путь сохранения расшифрованного файла и введите его название;
    5. Введите пароль, который был указан при шифровании файла.

Модуль "Генерация ключей RSA"
  Описанние
    Выбираются два простых числа p и q;
    Вычисляется модуль — произведение p и q;
    Вычисляется функция Эйлера: φ=(p-1)×(q-1);.
    Выбирается открытая экспонента e, отвечающее следующим критериям: (I) e простое, (II) e быть меньше φ, (III) e взаимно простое с φ;
    Пара чисел {e, n} — открытый ключ.
    Вычисляется число d, обратное е по модулю φ.
    Пара {d, n} — это секретный ключ

  Рассмотрим процедуру генерации ключей RSA:
    1.Введите размер ключа (Не менее 512 бит). Чем выше размер ключа, тем выше криптостойкость. Рекомендуемый размер: 1024 бит
    2.Нажмите кнопку "Сгенерировать"
    3.Выберите путь сохранения ключей, введите название папки
    4.Ключи будут сгенерированы в указанную папку public.key (Открытый ключ), private.key (Закрытый ключ)

Модуль "Асиметричное шифрование":
Алгоритм шифрования RSA
Асимметричное шифрование: посторонним лицам может быть известен алгоритм шифрования, и, возможно открытый ключ, но неизвестен закрытый ключ, известный только получателю. Криптографические системы с открытым ключом в настоящее время широко применяются в различных сетевых протоколах, в частности, в протоколах TLS и его предшественнике SSL (лежащих в основе HTTPS), а так же SSH, PGP, S/MIME и т. д.
На данный момент асимметричное шифрование на основе открытого ключа RSA (расшифровывается, как Rivest, Shamir and Aldeman - создатели алгоритма) использует большинство продуктов на рынке информационной безопасности.
Его криптостойкость основывается на сложности разложения на множители больших чисел, а именно - на исключительной трудности задачи определить секретный ключ на основании открытого, так как для этого потребуется решить задачу о существовании делителей целого числа. Наиболее криптостойкие системы используют 1024-битовые и большие числа.

Рассмотрим схему шифрования RSA между Алисой (А) и Бобом (Б).

Боб (Б) хочет передать Алисе (А) сообщение:

Алгоритм зашифрования:
    1. Взять открытый ключ public.key Алисы (А)
    2. Взять сообщение  Боба (Б)
    3. Зашифровать сообщение Боба (Б) с использованием открытого ключа Алисы (А) public.key

Алгоритм расшифрования:
    1. Принять зашифрованное сообщение Боба (Б)
    2. Взять свой закрытый ключ private.key [Ключ Алисы (А)]
    3. Применить закрытый ключ private.key для расшифрования сообщения Боба (Б)

Модуль "Криптосистема Рабина":
Криптосистема Рабина — криптографическая система с открытым ключом, безопасность которой обеспечивается сложностью поиска квадратных корней составного числа. Безопасность системы, как и безопасность метода RSA, обусловлена сложностью разложения на множители больших чисел.
Система Рабина, как и любая асимметричная криптосистема, использует открытый и закрытый ключи. Открытый ключ используется для шифрования сообщений и может быть опубликован для всеобщего обозрения. Закрытый ключ необходим для расшифровки и должен быть известен только получателям зашифрованных сообщений.

Процесс генерации ключей следующий:

    выбираются два случайных числа p и q с учётом следующих требований:
        числа должны быть большими;
        числа должны быть простыми;
        должно выполняться условие: p ≡ q ≡ 3 mod 4.

    Выполнение этих требований сильно ускоряет процедуру извлечения корней по модулю р и q;

    вычисляется число n = p · q;
    число n — открытый ключ; числа p и q — закрытый.

Пример. Пусть p = 7 и q = 11. Тогда n = p · q = 7 · 11 = 77. Число n = 77 — открытый ключ, а числа p = 7 и q = 11 — закрытый. Получатель сообщает отправителям число 77. Отправители шифруют сообщение, используя число 77, и отправляют получателю. Получатель расшифровывает сообщение с помощью чисел 7 и 11. Приведённые ключи плохи для практического использования, так как число 77 легко раскладывается на простые множители (7 и 11).

Рассмотрим схему шифрования по Рабину между Алисой (А) и Бобом (Б).

Боб (Б) хочет передать Алисе (А) сообщение:

Алгоритм зашифрования:
    1. Взять открытый ключ n Алисы (А)
    2. Взять сообщение  Боба (Б)
    3. Зашифровать сообщение Боба (Б) с использованием открытого ключа Алисы (А) n

Алгоритм расшифрования:
    1. Принять зашифрованное сообщение Боба (Б)
    2. Взять свой закрытый ключ p и q [Ключ Алисы (А)]
    3. Применить закрытый ключ p и q для расшифрования сообщения Боба (Б)